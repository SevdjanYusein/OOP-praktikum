https://github.com/radoslaw152

// week2_praktikum.cpp : main project file.

#include "stdafx.h"
#include <iostream>


const size_t egnSize= 11;
const size_t nameLenght = 32;
const size_t countOfGrade= 5;

struct Student
{
 char name[nameLenght];
 char Egn[egnSize];
 int fn;
 double grade[countOfGrade];
};

void initialize(Student& s)
{
	std::cin.getline(s.name,nameLenght,'\n');
	std::cin>>s.Egn;
	std::cin>>s.fn;
	for (int i=0; i<countOfGrade; i++)
		{
			std::cin>>s.grade[i];
		}
}

void print(const Student& s)
{
	std::cout<<s.name;
	std::cout<<s.Egn;
	std::cout<<s.fn;
	for (int i=0; i<countOfGrade; i++)
		{
			std::cout<<s.grade[i];
		}
}

double averageMark(Student& s)
{
	double sum=0;
	for (size_t i=0; i<countOfGrade; i++)
	{
	sum+= s.grade[i];
	}
	return sum/(double)countOfGrade;
}

void printAverageMarks(Student* students, size_t count)
{
	double sum=0;
	for (int i=0; i<count; i++)
	{
		for (int j=0; j<countOfGrade; j++)
		{
			sum += students[i].grade[j];
		}
		std::cout<<sum/countOfGrade;
	}
}

Student& getBestStudent(Student* students, size_t count)
{
	size_t currentBestStudentIndex = 0;
	double currentHighestAverageMark = averageMark(students[0]);
	for (size_t i=0; i<count-1; i++)
	{
		if (currentHighestAverageMark <= averageMark(students[i+1])) 
			{
				currentHighestAverageMark=averageMark(students[i+1]);
				currentBestStudentIndex= i+1;
			}
	}
	return *(students + currentBestStudentIndex);
}

int main()
{
	const int studentsCount = 2;
	Student students[studentsCount];
	for (size_t i=0; i<studentsCount; i++)	
		{
			initialize(students[i]);
			std::cin.get();
		}

	for (size_t i=0; i<studentsCount; i++)
	{
	print(students[i]);
	}

	printAverageMarks(students, studentsCount);
	Student& bestStudent = getBestStudent(students,studentsCount);

    return 0;
}
